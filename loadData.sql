INSERT INTO USERS(
    USER_ID, 
    FIRST_NAME,
    LAST_NAME,
    YEAR_OF_BIRTH,
    MONTH_OF_BIRTH,
    DAY_OF_BIRTH,
    GENDER
) 
SELECT DISTINCT
    USER_ID, 
    FIRST_NAME, 
    LAST_NAME, 
    YEAR_OF_BIRTH,
    MONTH_OF_BIRTH,
    DAY_OF_BIRTH,
    GENDER
FROM project2.PUBLIC_USER_INFORMATION;

INSERT INTO FRIENDS(
    USER1_ID,
    USER2_ID
) 
SELECT DISTINCT
    USER1_ID,
    USER2_ID
FROM project2.PUBLIC_ARE_FRIENDS;
-- select user1_id, user2_id from friends where user1_id=637

INSERT INTO CITIES(
    CITY_NAME,
    STATE_NAME,
    COUNTRY_NAME
)
SELECT 
    CURRENT_CITY,
    CURRENT_STATE,
    CURRENT_COUNTRY
FROM project2.PUBLIC_USER_INFORMATION 
UNION SELECT 
    HOMETOWN_CITY,
    HOMETOWN_STATE,
    HOMETOWN_COUNTRY
FROM project2.PUBLIC_USER_INFORMATION;
-- select city_name, state_name, country_name from cities where city_id=1;

INSERT INTO USER_CURRENT_CITIES(
    USER_ID,
    CURRENT_CITY_ID
)
SELECT DISTINCT
    project2.PUBLIC_USER_INFORMATION.USER_ID,
    CITIES.CITY_ID
FROM
    project2.PUBLIC_USER_INFORMATION
INNER JOIN
    CITIES
ON
    CITIES.CITY_NAME = project2.PUBLIC_USER_INFORMATION.CURRENT_CITY AND
    CITIES.STATE_NAME = project2.PUBLIC_USER_INFORMATION.CURRENT_STATE AND
    CITIES.COUNTRY_NAME = project2.PUBLIC_USER_INFORMATION.CURRENT_COUNTRY;

INSERT INTO USER_HOMETOWN_CITIES(
    USER_ID,
    HOMETOWN_CITY_ID
)
SELECT DISTINCT
    project2.PUBLIC_USER_INFORMATION.USER_ID,
    CITIES.CITY_ID
FROM
    project2.PUBLIC_USER_INFORMATION
INNER JOIN
    CITIES
ON
    CITIES.CITY_NAME = project2.PUBLIC_USER_INFORMATION.HOMETOWN_CITY AND
    CITIES.STATE_NAME = project2.PUBLIC_USER_INFORMATION.HOMETOWN_STATE AND
    CITIES.COUNTRY_NAME = project2.PUBLIC_USER_INFORMATION.HOMETOWN_COUNTRY;

INSERT INTO PROGRAMS(
    INSTITUTION,
    CONCENTRATION,
    DEGREE
)
SELECT DISTINCT
    INSTITUTION_NAME,
    PROGRAM_CONCENTRATION,
    PROGRAM_DEGREE
FROM project2.PUBLIC_USER_INFORMATION
WHERE INSTITUTION_NAME IS NOT NULL; 
-- SELECT DISTINCT INSTITUTION_NAME, PROGRAM_DEGREE FROM project2.PUBLIC_USER_INFORMATION WHERE INSTITUTION_NAME IS NOT NULL;

INSERT INTO EDUCATION(
    USER_ID,
    PROGRAM_ID,
    PROGRAM_YEAR
)
SELECT DISTINCT
    project2.PUBLIC_USER_INFORMATION.USER_ID,
    PROGRAMS.PROGRAM_ID,
    project2.PUBLIC_USER_INFORMATION.PROGRAM_YEAR
FROM
    project2.PUBLIC_USER_INFORMATION
INNER JOIN 
    PROGRAMS
ON 
    PROGRAMS.INSTITUTION = project2.PUBLIC_USER_INFORMATION.INSTITUTION_NAME AND
    PROGRAMS.CONCENTRATION = project2.PUBLIC_USER_INFORMATION.PROGRAM_CONCENTRATION AND
    PROGRAMS.DEGREE = project2.PUBLIC_USER_INFORMATION.PROGRAM_DEGREE;

INSERT INTO USER_EVENTS(
    EVENT_ID,
    EVENT_CREATOR_ID,
    EVENT_NAME,
    EVENT_TAGLINE,
    EVENT_DESCRIPTION,
    EVENT_HOST, 
    EVENT_TYPE,
    EVENT_SUBTYPE,
    EVENT_ADDRESS,
    EVENT_CITY_ID,
    EVENT_START_TIME,
    EVENT_END_TIME
)
SELECT
    P.EVENT_ID,
    P.EVENT_CREATOR_ID,
    P.EVENT_NAME,
    P.EVENT_TAGLINE,
    P.EVENT_DESCRIPTION,
    P.EVENT_HOST,
    P.EVENT_TYPE,
    P.EVENT_SUBTYPE,
    P.EVENT_ADDRESS,
    C.CITY_ID,
    P.EVENT_START_TIME,
    P.EVENT_END_TIME
FROM 
    project2.PUBLIC_EVENT_INFORMATION P
INNER JOIN
    CITIES C
ON 
    P.EVENT_CITY = C.CITY_NAME;

SET AUTOCOMMIT OFF

INSERT INTO PHOTOS(
    PHOTO_ID,
    ALBUM_ID,
    PHOTO_CAPTION,
    PHOTO_CREATED_TIME,
    PHOTO_MODIFIED_TIME,
    PHOTO_LINK
)
SELECT
    PHOTO_ID,
    ALBUM_ID,
    PHOTO_CAPTION,
    PHOTO_CREATED_TIME,
    PHOTO_MODIFIED_TIME,
    PHOTO_LINK
FROM
    project2.PUBLIC_PHOTO_INFORMATION;

INSERT INTO ALBUMS(
    ALBUM_ID,
    ALBUM_OWNER_ID,
    ALBUM_NAME,
    ALBUM_CREATED_TIME,
    ALBUM_MODIFIED_TIME,
    ALBUM_LINK,
    ALBUM_VISIBILITY,
    COVER_PHOTO_ID
)
SELECT DISTINCT
    ALBUM_ID,
    OWNER_ID,
    ALBUM_NAME,
    ALBUM_CREATED_TIME,
    ALBUM_MODIFIED_TIME,
    ALBUM_LINK,
    ALBUM_VISIBILITY,
    COVER_PHOTO_ID
FROM
    project2.PUBLIC_PHOTO_INFORMATION;

SET AUTOCOMMIT ON

INSERT INTO TAGS(
    TAG_PHOTO_ID,
    TAG_SUBJECT_ID,
    TAG_CREATED_TIME,
    TAG_X,
    TAG_Y
)
SELECT
    PHOTO_ID,
    TAG_SUBJECT_ID,
    TAG_CREATED_TIME,
    TAG_X_COORDINATE,
    TAG_Y_COORDINATE
FROM 
    project2.PUBLIC_TAG_INFORMATION;

-- select album_id from project2.public_photo_information where photo_id=101;
-- select album_id from photos where photo_id=101;